{"version":3,"sources":["components/login/login.module.css","components/header/header.module.css","app.module.css","components/footer/footer.module.css","components/footer/footer.jsx","components/header/header.jsx","components/login/login.jsx","components/maker/maker.jsx","app.jsx","components/service/firebase.js","index.js","components/service/auth_service.js"],"names":["module","exports","Footer","props","className","styles","footer","Header","onLogout","header","src","process","alt","logo","logout","onClick","Login","authService","history","useHistory","goToMaker","userId","push","pathname","state","id","onLogin","event","login","currentTarget","innerText","then","data","user","uid","useEffect","onAuthChange","title","button","Maker","console","log","App","app","basename","exact","path","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","providerName","authProvider","auth","signInWithPopup","signOut","onUserChanged","onAuthStateChanged","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8GACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,OAAS,wB,mBCArFD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,OAAS,yB,mBCAvFD,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,OAAS,yB,iKCSZC,EAPA,SAACC,GACd,OACE,wBAAQC,UAAWC,IAAOC,OAA1B,SACE,iE,iBCgBSC,EAnBA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,yBAAQJ,UAAWC,IAAOI,OAA1B,UACE,qBACEC,IAAKC,uCACLC,IAAI,OACJR,UAAWC,IAAOQ,OAEpB,qDAECL,GACC,wBAAQJ,UAAWC,IAAOS,OAAQC,QAASP,EAA3C,wB,iBCoCOQ,EA5CD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACTC,EAAUC,cAEVC,EAAY,SAACC,GACjBH,EAAQI,KAAK,CACXC,SAAU,SACVC,MAAO,CAAEC,GAAIJ,MAIXK,EAAU,SAACC,GACfV,EACGW,MAAMD,EAAME,cAAcC,WAC1BC,MAAK,SAACC,GAAD,OAAUZ,EAAUY,EAAKC,KAAKC,SAcxC,OAPAC,qBAAU,WAERlB,EAAYmB,cAAa,SAACH,GACxBA,GAAQb,EAAUa,EAAKC,WAKzB,gCACE,cAAC,EAAD,IACA,0BAAS9B,UAAWC,IAAOuB,MAA3B,UACE,oBAAIxB,UAAWC,IAAOgC,MAAtB,gCACA,wBAAQjC,UAAWC,IAAOiC,OAAQvB,QAASW,EAA3C,oBAGA,wBAAQtB,UAAWC,IAAOiC,OAAQvB,QAASW,EAA3C,uBAIF,cAAC,EAAD,QCfSa,EAzBD,SAAC,GAAqB,IAAnBtB,EAAkB,EAAlBA,YACTC,EAAUC,cAgBhB,OATAgB,qBAAU,WAERlB,EAAYmB,cAAa,SAACH,GACnBA,GACHf,EAAQI,KAAK,WAMjB,oCACE,uCACA,cAAC,EAAD,CAAQd,SAjBK,WACfS,EAAYH,SACZ0B,QAAQC,IAAI,0CCcDC,MAnBf,YAA+B,IAAhBzB,EAAe,EAAfA,YACb,OACE,mCACE,qBAAKb,UAAWC,IAAOsC,IAAvB,SACE,cAAC,IAAD,CAAeC,SAAUjC,uBAAzB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAO7B,YAAaA,MAEtB,cAAC,IAAD,CAAO6B,KAAK,SAAZ,SACE,cAAC,EAAD,CAAO7B,YAAaA,gB,wBCJnB8B,EAFKC,IAASC,cAPN,CACrBC,OAAQvC,0CACRwC,WAAYxC,4CACZyC,UAAWzC,8BCCPM,EAAc,I,qFCAlB,SAAMoC,GACJ,IAAMC,EAAe,IAAIN,IAASO,KAAT,UAAiBF,EAAjB,kBAGzB,OADAb,QAAQC,IAAIa,GACLP,EAAYQ,OAAOC,gBAAgBF,K,oBAI5C,WACEN,IAASO,OAAOE,Y,0BAKlB,SAAaC,GACXV,IAASO,OAAOI,oBAAmB,SAAC1B,GAClCyB,EAAczB,U,MDdpB2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAK7C,YAAaA,MAEpB8C,SAASC,eAAe,W","file":"static/js/main.5aa7b6ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login_login__4uMK3\",\"title\":\"login_title__2DPPr\",\"button\":\"login_button__3y5jh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1uVv0\",\"logo\":\"header_logo__2tmC4\",\"logout\":\"header_logout__26ch2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__JUgD3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__2rsRu\"};","import React from \"react\";\r\nimport styles from \"./footer.module.css\";\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n    <footer className={styles.footer}>\r\n      <p>To become Front-end Developer</p>\r\n    </footer>\r\n  );\r\n};\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport styles from \"./header.module.css\";\r\n\r\nconst Header = ({ onLogout }) => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <img\r\n        src={process.env.PUBLIC_URL + \"/images/logo.png\"}\r\n        alt=\"logo\"\r\n        className={styles.logo}\r\n      />\r\n      <h1>Business Card Maker</h1>\r\n\r\n      {onLogout && (\r\n        <button className={styles.logout} onClick={onLogout}>\r\n          Logout\r\n        </button>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Footer from \"../footer/footer\";\r\nimport Header from \"../header/header\";\r\nimport styles from \"./login.module.css\";\r\n\r\nconst Login = ({ authService }) => {\r\n  const history = useHistory();\r\n\r\n  const goToMaker = (userId) => {\r\n    history.push({\r\n      pathname: \"/maker\",\r\n      state: { id: userId },\r\n    });\r\n  };\r\n\r\n  const onLogin = (event) => {\r\n    authService\r\n      .login(event.currentTarget.innerText)\r\n      .then((data) => goToMaker(data.user.uid));\r\n\r\n    // ? 데이터가 나왔어. 뭘 해야할까?\r\n    // maker 페이지로 가야겠지\r\n    //  사용자의 정보도 같이 보내주기 위해 uid를 같이 보내주자\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 페이지가 처음에 렌더되면서 유저가 있는지 확인 후 페이지 이동\r\n    authService.onAuthChange((user) => {\r\n      user && goToMaker(user.uid);\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <section className={styles.login}>\r\n        <h2 className={styles.title}>로그인</h2>\r\n        <button className={styles.button} onClick={onLogin}>\r\n          Google\r\n        </button>\r\n        <button className={styles.button} onClick={onLogin}>\r\n          Github\r\n        </button>\r\n      </section>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Header from \"../header/header\";\r\n// import styles from \"./maker.module.css\";\r\n\r\nconst Maker = ({ authService }) => {\r\n  const history = useHistory();\r\n\r\n  const onLogout = () => {\r\n    authService.logout();\r\n    console.log(\"유저 없어짐\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 로그아웃이 되서 유저가 없으면 로그인 페이지로 이동\r\n    authService.onAuthChange((user) => {\r\n      if (!user) {\r\n        history.push(\"/\");\r\n      }\r\n    });\r\n  });\r\n\r\n  return (\r\n    <section>\r\n      <h2>maker</h2>\r\n      <Header onLogout={onLogout} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Maker;\r\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport styles from \"./app.module.css\";\nimport Login from \"./components/login/login\";\nimport Maker from \"./components/maker/maker\";\n\nfunction App({ authService }) {\n  return (\n    <>\n      <div className={styles.app}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route exact path=\"/\">\n              <Login authService={authService} />\n            </Route>\n            <Route path=\"/maker\">\n              <Maker authService={authService} />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\r\n};\r\n// Initialize Firebase\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebaseApp;\r\n\r\n// firebase 정보들은 깃헙에 노출되면 X\r\n//  .env 파일에 넣어서 관리한다.\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport AuthService from \"./components/service/auth_service\";\n\nconst authService = new AuthService();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App authService={authService} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// 로그인 호출하는 곳\r\nimport firebase from \"firebase\";\r\nimport firebaseApp from \"./firebase\";\r\n\r\nclass AuthService {\r\n  // 로그인 완료 함수\r\n  login(providerName) {\r\n    const authProvider = new firebase.auth[`${providerName}AuthProvider`]();\r\n\r\n    console.log(authProvider);\r\n    return firebaseApp.auth().signInWithPopup(authProvider);\r\n  }\r\n\r\n  // 로그아웃\r\n  logout() {\r\n    firebase.auth().signOut();\r\n  }\r\n\r\n  // 유저 변경 및 처음 로그인 유지\r\n  // 유저의 유무에 따른 콜백함수를 실행\r\n  onAuthChange(onUserChanged) {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      onUserChanged(user);\r\n    });\r\n  }\r\n}\r\n\r\nexport default AuthService;\r\n"],"sourceRoot":""}